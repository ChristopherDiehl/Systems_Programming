Fragmentation: When entire processes are loaded into memory, there can be lots of unused memory space, but new jobs cannot be loaded

LOOK AT CHECKLIST / NOTES

What are the differences between derps and derps
--sometimes small differences arent
-. vs -> on struct
- more vs less
-calloc vs malloc
-struct vs union
-pointers vs arrays


TYPES AND MEMORY
-how many bytes long is derp
-look at why
  ---always answer why
-struct vs union

asks about addressess and pointers

DANGER
-why shouldn't you use a pointer after derp (its freed)
-why will the code before
-why shouldn't you free a non-allocated freed
-what is a derp of a derp

Headers
-what should you always include
-finish a header so it does something

EXTRA

=====CONST REVIEW=======
const int i=5;
-final cannot change it

int * aptr= &i;

two pieces can change with const to pointer
-can change address 
-can change data

chane address
aptr =...
change data
*aptr = &i

2 things to apply const too

const int * aptr = &i;
--can't change data
int * const aptr= &i;
--can't change address
const int * const aptr = &i;
--looked it all down


ENTIRE SECTION OF POINTER GYMNASTICS
-const --review that shit

Headers